{"version":3,"sources":["context/ThemeContext.js","hooks/useTheme.js","components/Searchbar.js","components/Navbar.js","hooks/useFetch.js","env-config.js","components/RecipeList.js","pages/home/Home.js","pages/create/Create.js","pages/recipe/Recipe.js","pages/search/Search.js","assets/mode-icon.svg","components/ThemeSelector.js","App.js","index.js"],"names":["ThemeContext","createContext","themeReducer","state","action","type","color","payload","mode","ThemeProvider","children","useReducer","dispatch","Provider","value","changeColor","changeMode","useTheme","context","useContext","undefined","Error","Searchbar","useState","term","setTerm","history","useHistory","className","onSubmit","e","preventDefault","push","htmlFor","id","onChange","target","Navbar","style","background","to","useFetch","url","method","data","setData","isPending","setIsPending","error","setError","options","setOptions","postData","headers","body","JSON","stringify","useEffect","controller","AbortController","fetchData","fetchOptions","a","fetch","signal","res","ok","statusText","json","name","console","log","abort","hostUrl","process","HOST","RecipeList","recipes","length","map","recipe","title","cookingTime","substring","Home","Create","setTitle","setMethod","setCookingTime","newIngredient","setNewIngredient","ingredients","setIngredients","ingredientInput","useRef","required","ref","onClick","ing","trim","includes","prevIngredients","current","focus","i","Recipe","useParams","Search","queryString","useLocation","search","query","URLSearchParams","get","themeColors","ThemeSelector","src","modeIcon","alt","filter","App","basename","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d3ed501.chunk.js","sourcesContent":["import { createContext, useReducer } from \"react\";\n\nexport const ThemeContext = createContext();\n\nfunction themeReducer(state, action) {\n  switch (action.type) {\n    case 'CHANGE_COLOR':\n      return {...state, color: action.payload};\n    case 'CHANGE_MODE':\n      return {...state, mode: action.payload};\n    default:\n      return state;\n  }\n}\n\nexport function ThemeProvider({ children }) {\n  const [state, dispatch] = useReducer(themeReducer, {\n    color: '#58249c',\n    mode: 'dark'\n  })\n\n  const changeColor = (color) => {\n    dispatch({type: 'CHANGE_COLOR', payload: color});\n  }\n\n  const changeMode = (mode) => {\n    dispatch({type: 'CHANGE_MODE', payload: mode})\n  }\n\n  return (\n    <ThemeContext.Provider value={{...state, changeColor, changeMode }}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}","import { useContext } from \"react\";\nimport { ThemeContext } from \"../context/ThemeContext\";\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n\n  if (context === undefined) {\n    throw new Error(\"useTheme() must be used inside a ThemeProvider\");\n  }\n\n  return context;\n}","// styles\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './Searchbar.css'\n\nconst Searchbar = () => {\n  const [term, setTerm] = useState('')\n  const history = useHistory()\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    history.push(`/search?q=${term}`)\n  }\n\n  return (\n    <div className=\"searchbar\">\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"search\">Search:</label>\n        <input \n          type=\"text\"\n          id=\"search\"\n          onChange={(e) => setTerm(e.target.value)}\n        />\n      </form>\n    </div>\n  );\n}\n \nexport default Searchbar;","import { Link } from 'react-router-dom';\nimport { useTheme } from '../hooks/useTheme';\n\n// styles\nimport './Navbar.css';\nimport Searchbar from './Searchbar';\n\nconst Navbar = () => {\n  const { color } = useTheme();\n\n  return (\n    <div className=\"navbar\" style={{ background: color }}>\n      <nav>\n        <Link to=\"/\" className=\"brand\">\n          <h1>Cooking Ninja</h1>\n        </Link>\n        <Searchbar />\n        <Link to=\"/create\">Create Recipe</Link>\n      </nav>\n    </div>\n  );\n}\n \nexport default Navbar;","import { useState, useEffect } from \"react\";\n\nconst useFetch = (url, method = \"GET\") => {\n  const [data, setData] = useState(null)\n  const [isPending, setIsPending] = useState(false)\n  const [error, setError] = useState(null)\n  const [options, setOptions] = useState(null)\n\n  const postData = (postData) => {\n    setOptions({\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(postData)\n    })\n  }\n\n  useEffect(() => {\n    const controller = new AbortController()\n\n    const fetchData = async (fetchOptions) => {\n      setIsPending(true)\n      \n      try {\n        const res = await fetch(url, { ...fetchOptions, signal: controller.signal })\n        if(!res.ok) {\n          throw new Error(res.statusText)\n        }\n        const data = await res.json()\n\n        setIsPending(false)\n        setData(data)\n        setError(null)\n      } catch (err) {\n        if (err.name === \"AbortError\") {\n          console.log(\"the fetch was aborted\")\n        } else {\n          setIsPending(false)\n          setError('Could not fetch the data')\n        }\n      }\n    }\n\n    if (method === \"GET\") {\n      fetchData()\n    }\n    if (method === \"POST\" && options) {\n      fetchData(options)\n    }\n\n    return () => {\n      controller.abort()\n    }\n\n  }, [url, method, options])\n\n  return { data, isPending, error, postData }\n}\n\nexport default useFetch;","export function hostUrl() {\n  return process.env.HOST || \"http://localhost:3000\"\n}","import { Link } from 'react-router-dom';\nimport { useTheme } from '../hooks/useTheme';\n\n// styles\nimport './RecipeList.css';\n\nconst RecipeList = ({ recipes }) => {\n  const { mode } = useTheme();\n\n  if (recipes.length === 0) {\n    return <div className=\"error\">No recipes found!</div>\n  }\n\n  return (\n    <div className=\"recipe-list\">\n      {recipes.map(recipe => (\n        <div key={recipe.id} className={`card ${mode}`}>\n          <h3>{recipe.title}</h3>\n          <p>{recipe.cookingTime} to make.</p>\n          <div>{recipe.method.substring(0, 100)}...</div>\n          <Link to={ `/recipes/${recipe.id}` }>Cook This</Link>\n        </div>\n      ))}\n    </div>\n  );\n}\n \nexport default RecipeList;","import useFetch from '../../hooks/useFetch';\nimport { hostUrl } from '../../env-config';\n\n// styles\nimport './Home.css'\n\n// components\nimport RecipeList from '../../components/RecipeList';\n\nconst Home = () => {\n  const url = hostUrl();\n\n  const {data: recipes, isPending, error} = useFetch(url + \"/recipes\");\n\n  return (\n    <div className=\"home\">\n      {error && <p className=\"error\">{error}</p>}\n      {isPending && <p className=\"loading\">Loading...</p>}\n      {recipes && <RecipeList recipes={recipes} />}\n    </div>\n  );\n}\n \nexport default Home;","import { useState, useRef, useEffect } from 'react'\nimport useFetch from '../../hooks/useFetch'\nimport { useHistory } from 'react-router-dom';\nimport { hostUrl } from '../../env-config';\nimport { useTheme } from '../../hooks/useTheme';\n\n// styles\nimport './Create.css'\n\nexport default function Create() {  \n  const [title, setTitle] = useState('')\n  const [method, setMethod] = useState('')\n  const [cookingTime, setCookingTime] = useState('')\n  const [newIngredient, setNewIngredient] = useState('')\n  const [ingredients, setIngredients] = useState([])\n  const ingredientInput = useRef(null)\n  const history = useHistory()\n  const { mode } = useTheme();\n\n  const url = hostUrl()\n\n  const { postData, data, error } = useFetch(url + '/recipes', 'POST')\n  \n  const handleSubmit = (e) => {\n    e.preventDefault()\n    postData({ title, ingredients, method, cookingTime: cookingTime + ' minutes' })\n  }\n\n  // Redirect user when post request is completed.\n  useEffect(() => {\n    if (error) {\n      console.log(error);\n    }\n    if (data) {\n      history.push('/')\n    }\n  }, [data, error, history])\n\n  const handleAdd = (e) => {\n    e.preventDefault()\n    const ing = newIngredient.trim()\n    if (ing && !ingredients.includes(ing)) {\n      setIngredients(prevIngredients => [...prevIngredients, newIngredient])\n    }\n    setNewIngredient('')\n    ingredientInput.current.focus()\n  }\n\n  return (\n    <div className={`create ${mode}`}>\n      <h2 className=\"page-title\">Add a New Recipe</h2>\n      <form onSubmit={handleSubmit}>\n\n        <label>\n          <span>Recipe title:</span>\n          <input \n            type=\"text\" \n            onChange={(e) => setTitle(e.target.value)}\n            value={title}\n            required\n          />\n        </label>\n\n        <label>\n          <span>Recipe Ingredients:</span>\n          <div className=\"ingredients\">\n            <input\n              type=\"text\"\n              onChange={(e) => setNewIngredient(e.target.value)}\n              value={newIngredient}\n              ref={ingredientInput}\n            />\n            <button onClick={handleAdd} className=\"btn\">add</button>\n          </div>\n        </label>\n        <p>Current ingredients: {ingredients.map(i => <em key={i}>{i}, </em>)}</p>\n\n        <label>\n          <span>Recipe Method:</span>\n          <textarea \n            onChange={(e) => setMethod(e.target.value)}\n            value={method}\n            required\n          />\n        </label>\n\n        <label>\n          <span>Cooking time (minutes):</span>\n          <input \n            type=\"number\" \n            onChange={(e) => setCookingTime(e.target.value)}\n            value={cookingTime}\n            required \n          />\n        </label>\n\n        <button className=\"btn\">Submit</button>\n      </form>\n    </div>\n  )\n}","import useFetch from '../../hooks/useFetch';\nimport { useParams } from 'react-router-dom';\nimport { hostUrl } from '../../env-config';\nimport { useTheme } from '../../hooks/useTheme';\n\n// styles\nimport './Recipe.css';\n\nconst Recipe = () => {\n  const { id } = useParams();\n  const url = hostUrl();\n  const { data: recipe, isPending, error } = useFetch(url + \"/recipes/\" + id);\n  const { mode } = useTheme();\n\n  return (\n    <div className={`recipe ${mode}`}>\n      {error && <p className='error'>{error}</p>}\n      {isPending && <p className='loading'>Loading...</p>}\n      {recipe && (\n        <>\n          <h2 className='page-title'>{ recipe.title }</h2>\n          <p>Takes {recipe.cookingTime} to cook.</p>\n          <ul>\n            {recipe.ingredients.map(ing => <li key={ing}>{ing}</li>)}\n          </ul>\n          <p className=\"method\">{recipe.method}</p>\n        </>\n      )}\n    </div>\n  );\n}\n \nexport default Recipe;","import { useLocation } from 'react-router-dom';\nimport { hostUrl } from '../../env-config';\nimport useFetch from '../../hooks/useFetch';\nimport RecipeList from '../../components/RecipeList';\n\n// styles\nimport './Search.css';\n\n// components\nimport { useTheme } from '../../hooks/useTheme';\n\nconst Search = () => {\n  const queryString = useLocation().search;\n  const queryParams = new URLSearchParams(queryString);\n  const query = queryParams.get(\"q\");\n  const { mode } = useTheme()\n\n  const url = hostUrl() + `/recipes?q=${query}`\n\n  const { data, error, isPending } = useFetch(url);\n\n  return (\n    <div className={`search ${mode}`}>\n      <h2 className=\"page-title\">Recipes including \"{query}\"</h2>\n      {error && <p className='error'>{error}</p>}\n      {isPending && <p className='loading'>Loading...</p> }\n      {data && <RecipeList recipes={data}/>}\n    </div>\n  );\n}\n \nexport default Search;","export default __webpack_public_path__ + \"static/media/mode-icon.ee863b98.svg\";","import { useTheme } from '../hooks/useTheme';\nimport modeIcon from '../assets/mode-icon.svg'\n\n// styles\nimport './ThemeSelector.css';\n\nconst themeColors = ['#58249c', '#249c6b', '#b70233'];\n\nconst ThemeSelector = () => {\n  const { changeColor, changeMode, mode } = useTheme();\n\n  const toggleMode = () => {\n    changeMode(mode === 'dark' ? 'light' : 'dark');\n  }\n\n  return (\n    <div className=\"theme-selector\">\n      <div className=\"mode-toggle\">\n        <img\n          onClick={toggleMode}\n          src={modeIcon}\n          alt=\"dark/light toggle icon\"\n          style={{ filter: mode === 'dark' ? 'invert(100%)' : 'invert(20%'}}\n        />\n      </div>\n      <div className=\"theme-buttons\">\n        {themeColors.map((color) => (\n          <div \n            key={color}\n            onClick={() => changeColor(color)} \n            style={{background: color}} \n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n \nexport default ThemeSelector;","import { BrowserRouter, Switch, Route } from 'react-router-dom';\n\n// page components\nimport Navbar from './components/Navbar';\nimport Home from './pages/home/Home';\nimport Create from './pages/create/Create';\nimport Recipe from './pages/recipe/Recipe';\nimport Search from './pages/search/Search';\nimport ThemeSelector from './components/ThemeSelector';\nimport { useTheme } from './hooks/useTheme';\n\n// styles\nimport './App.css';\n\nfunction App() {\n  const { mode } = useTheme()\n\n  return (\n    <div className={`App ${mode}`}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Navbar />\n        <ThemeSelector />\n        <Switch>\n          <Route exact path=\"/\" >\n            <Home />\n          </Route>\n          <Route path=\"/create\" >\n            <Create />\n          </Route>\n          <Route path=\"/search\" >\n            <Search />\n          </Route>\n          <Route exact path=\"/recipes/:id\" >\n            <Recipe />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ThemeProvider } from './context/ThemeContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}