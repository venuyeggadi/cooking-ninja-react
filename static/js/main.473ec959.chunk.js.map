{"version":3,"sources":["components/Navbar.js","hooks/useFetch.js","env-config.js","components/RecipeList.js","pages/home/Home.js","pages/create/Create.js","pages/recipe/Recipe.js","pages/search/Search.js","App.js","index.js"],"names":["Navbar","className","to","useFetch","url","method","useState","data","setData","isPending","setIsPending","error","setError","options","setOptions","postData","headers","body","JSON","stringify","useEffect","controller","AbortController","fetchData","fetchOptions","a","fetch","signal","res","ok","Error","statusText","json","name","console","log","abort","hostUrl","process","HOST","RecipeList","recipes","map","recipe","title","cookingTime","substring","id","Home","Create","setTitle","setMethod","setCookingTime","newIngredient","setNewIngredient","ingredients","setIngredients","ingredientInput","useRef","history","useHistory","push","onSubmit","e","preventDefault","type","onChange","target","value","required","ref","onClick","ing","trim","includes","prevIngredients","current","focus","i","Recipe","useParams","Search","App","basename","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.473ec959.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\n\n// styles\nimport './Navbar.css';\n\nconst Navbar = () => {\n  return (\n    <div className=\"navbar\">\n      <nav>\n        <Link to=\"/\" className=\"brand\">\n          <h1>Cooking Ninja</h1>\n        </Link>\n        <Link to=\"/create\">Create Recipe</Link>\n      </nav>\n    </div>\n  );\n}\n \nexport default Navbar;","import { useState, useEffect } from \"react\";\n\nconst useFetch = (url, method = \"GET\") => {\n  const [data, setData] = useState(null)\n  const [isPending, setIsPending] = useState(false)\n  const [error, setError] = useState(null)\n  const [options, setOptions] = useState(null)\n\n  const postData = (postData) => {\n    setOptions({\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(postData)\n    })\n  }\n\n  useEffect(() => {\n    const controller = new AbortController()\n\n    const fetchData = async (fetchOptions) => {\n      setIsPending(true)\n      \n      try {\n        const res = await fetch(url, { ...fetchOptions, signal: controller.signal })\n        if(!res.ok) {\n          throw new Error(res.statusText)\n        }\n        const data = await res.json()\n\n        setIsPending(false)\n        setData(data)\n        setError(null)\n      } catch (err) {\n        if (err.name === \"AbortError\") {\n          console.log(\"the fetch was aborted\")\n        } else {\n          setIsPending(false)\n          setError('Could not fetch the data')\n        }\n      }\n    }\n\n    if (method === \"GET\") {\n      fetchData()\n    }\n    if (method === \"POST\" && options) {\n      fetchData(options)\n    }\n\n    return () => {\n      controller.abort()\n    }\n\n  }, [url, method, options])\n\n  return { data, isPending, error, postData }\n}\n\nexport default useFetch;","export function hostUrl() {\n  return process.env.HOST || \"http://localhost:3000\"\n}","import { Link } from 'react-router-dom';\n\n// styles\nimport './RecipeList.css';\n\nconst RecipeList = ({ recipes }) => {\n  return (\n    <div className=\"recipe-list\">\n      {recipes.map(recipe => (\n        <div key={recipe.id} className=\"card\">\n          <h3>{recipe.title}</h3>\n          <p>{recipe.cookingTime} to make.</p>\n          <div>{recipe.method.substring(0, 100)}...</div>\n          <Link to={ `/recipes/${recipe.id}` }>Cook This</Link>\n        </div>\n      ))}\n    </div>\n  );\n}\n \nexport default RecipeList;","import useFetch from '../../hooks/useFetch';\nimport { hostUrl } from '../../env-config';\n\n// styles\nimport './Home.css'\n\n// components\nimport RecipeList from '../../components/RecipeList';\n\nconst Home = () => {\n  const url = hostUrl();\n\n  const {data: recipes, isPending, error} = useFetch(url + \"/recipes\");\n\n  return (\n    <div className=\"home\">\n      {error && <p className=\"error\">{error}</p>}\n      {isPending && <p className=\"loading\">Loading...</p>}\n      {recipes && <RecipeList recipes={recipes} />}\n    </div>\n  );\n}\n \nexport default Home;","import { useState, useRef, useEffect } from 'react'\nimport useFetch from '../../hooks/useFetch'\nimport { useHistory } from 'react-router-dom';\nimport { hostUrl } from '../../env-config';\n\n// styles\nimport './Create.css'\n\nexport default function Create() {  \n  const [title, setTitle] = useState('')\n  const [method, setMethod] = useState('')\n  const [cookingTime, setCookingTime] = useState('')\n  const [newIngredient, setNewIngredient] = useState('')\n  const [ingredients, setIngredients] = useState([])\n  const ingredientInput = useRef(null)\n  const history = useHistory()\n\n  const url = hostUrl()\n\n  const { postData, data, error } = useFetch(url + '/recipes', 'POST')\n  \n  const handleSubmit = (e) => {\n    e.preventDefault()\n    postData({ title, ingredients, method, cookingTime: cookingTime + ' minutes' })\n  }\n\n  // Redirect user when post request is completed.\n  useEffect(() => {\n    if (error) {\n      console.log(error);\n    }\n    if (data) {\n      history.push('/')\n    }\n  }, [data, error, history])\n\n  const handleAdd = (e) => {\n    e.preventDefault()\n    const ing = newIngredient.trim()\n    if (ing && !ingredients.includes(ing)) {\n      setIngredients(prevIngredients => [...prevIngredients, newIngredient])\n    }\n    setNewIngredient('')\n    ingredientInput.current.focus()\n  }\n\n  return (\n    <div className=\"create\">\n      <h2 className=\"page-title\">Add a New Recipe</h2>\n      <form onSubmit={handleSubmit}>\n\n        <label>\n          <span>Recipe title:</span>\n          <input \n            type=\"text\" \n            onChange={(e) => setTitle(e.target.value)}\n            value={title}\n            required\n          />\n        </label>\n\n        <label>\n          <span>Recipe Ingredients:</span>\n          <div className=\"ingredients\">\n            <input\n              type=\"text\"\n              onChange={(e) => setNewIngredient(e.target.value)}\n              value={newIngredient}\n              ref={ingredientInput}\n            />\n            <button onClick={handleAdd} className=\"btn\">add</button>\n          </div>\n        </label>\n        <p>Current ingredients: {ingredients.map(i => <em key={i}>{i}, </em>)}</p>\n\n        <label>\n          <span>Recipe Method:</span>\n          <textarea \n            onChange={(e) => setMethod(e.target.value)}\n            value={method}\n            required\n          />\n        </label>\n\n        <label>\n          <span>Cooking time (minutes):</span>\n          <input \n            type=\"number\" \n            onChange={(e) => setCookingTime(e.target.value)}\n            value={cookingTime}\n            required \n          />\n        </label>\n\n        <button className=\"btn\">Submit</button>\n      </form>\n    </div>\n  )\n}","import useFetch from '../../hooks/useFetch';\nimport { useParams } from 'react-router-dom';\nimport { hostUrl } from '../../env-config';\n\n// styles\nimport './Recipe.css';\n\nconst Recipe = () => {\n  const { id } = useParams();\n  const url = hostUrl();\n  const { data: recipe, isPending, error } = useFetch(url + \"/recipes/\" + id);\n\n  return (\n    <div className=\"recipe\">\n      {error && <p className='error'>{error}</p>}\n      {isPending && <p className='loading'>Loading...</p>}\n      {recipe && (\n        <>\n          <h2 className='page-title'>{ recipe.title }</h2>\n          <p>Takes {recipe.cookingTime} to cook.</p>\n          <ul>\n            {recipe.ingredients.map(ing => <li key={ing}>{ing}</li>)}\n          </ul>\n          <p className=\"method\">{recipe.method}</p>\n        </>\n      )}\n    </div>\n  );\n}\n \nexport default Recipe;","import './Search.css';\n\nconst Search = () => {\n  return (\n    <div>\n      Search\n    </div>\n  );\n}\n \nexport default Search;","import { BrowserRouter, Switch, Route } from 'react-router-dom';\n\n// page components\nimport Navbar from './components/Navbar';\nimport Home from './pages/home/Home';\nimport Create from './pages/create/Create';\nimport Recipe from './pages/recipe/Recipe';\nimport Search from './pages/search/Search';\n\n// styles\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" >\n            <Home />\n          </Route>\n          <Route path=\"/create\" >\n            <Create />\n          </Route>\n          <Route path=\"/search\" >\n            <Search />\n          </Route>\n          <Route exact path=\"/recipes/:id\" >\n            <Recipe />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}